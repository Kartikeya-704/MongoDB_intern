-- SQL Part
SHOW DATABASES;
CREATE DATABASE campus_db;
USE campus_db;

CREATE TABLE learners (
    learner_id INT AUTO_INCREMENT PRIMARY KEY,
    full_name VARCHAR(100),
    email_id VARCHAR(100),
    major VARCHAR(50)
);

CREATE TABLE modules (
    module_id INT AUTO_INCREMENT PRIMARY KEY,
    module_title VARCHAR(100),
    credit_value INT
);

CREATE TABLE terms (
    term_id INT AUTO_INCREMENT PRIMARY KEY,
    learner_id INT,
    term_label VARCHAR(20),
    academic_year INT,
    FOREIGN KEY (learner_id) REFERENCES learners(learner_id)
);

CREATE TABLE assessments (
    assessment_id INT AUTO_INCREMENT PRIMARY KEY,
    term_id INT,
    module_id INT,
    assessment_type VARCHAR(50),
    marks_obtained DECIMAL(5,2),
    FOREIGN KEY (term_id) REFERENCES terms(term_id),
    FOREIGN KEY (module_id) REFERENCES modules(module_id)
);

INSERT INTO learners (full_name, email_id, major) VALUES
('Kiran', 'kiran@campus.edu.in', 'BSc'),
('Meera', 'meera@campus.edu.in', 'MSc');

INSERT INTO modules (module_title, credit_value) VALUES
('Data Mining', 4),
('Machine Learning', 3);

INSERT INTO terms (learner_id, term_label, academic_year) VALUES
(1, 'Autumn', 2025),
(2, 'Autumn', 2025);

INSERT INTO assessments (term_id, module_id, assessment_type, marks_obtained) VALUES
(1, 1, 'Quiz', 81.5),
(1, 1, 'Project', 89.0),
(2, 2, 'Quiz', 78.0),
(2, 2, 'Project', 82.5);


// Java Part
package connection;

import java.sql.*;

public class DBConn {
    public static void main(String[] args){
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/campus_db", "root", "yourpassword");
            System.out.println("Connected: " + con);

            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("SELECT * FROM modules");

            while (rs.next()) {
                System.out.println(rs.getInt(1) + " " + rs.getString(2) + " " + rs.getInt(3));
            }

            con.close();
        } catch (Exception e) {
            System.out.println("Connection error. Please verify credentials.");
            e.printStackTrace();
        }
    }
}

package operations;

import java.sql.Connection;
import java.sql.DriverManager;

public class DatabaseLink {
    public Connection connect() {
        Connection connection = null;
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/campus_db", "root", "yourpassword");
        } catch (Exception e) {
            System.out.println("Connection failed: " + e.getMessage());
        }
        return connection;
    }
}

package operations;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Scanner;

public class ModuleOperations {

    public static void main(String[] args) {
        ModuleOperations obj = new ModuleOperations();
        Scanner scanner = new Scanner(System.in);

        System.out.print("Enter learner ID for term: ");
        int learnerId = scanner.nextInt();
        scanner.nextLine();

        System.out.print("Enter term name (e.g., Autumn): ");
        String termLabel = scanner.nextLine();

        System.out.print("Enter year: ");
        int year = scanner.nextInt();

        obj.insertTerm(learnerId, termLabel, year);

        System.out.print("Enter term ID to insert assessment: ");
        int termId = scanner.nextInt();

        System.out.print("Enter module ID: ");
        int moduleId = scanner.nextInt();
        scanner.nextLine();

        System.out.print("Enter assessment type (Quiz/Project): ");
        String assessmentType = scanner.nextLine();

        System.out.print("Enter marks: ");
        double marks = scanner.nextDouble();

        obj.insertAssessment(termId, moduleId, assessmentType, marks);

        System.out.print("Enter learner ID to view assessments: ");
        int viewId = scanner.nextInt();
        obj.getAssessmentsByLearner(viewId);

        scanner.close();
    }

    public void insertTerm(int learnerId, String termLabel, int year) {
        DatabaseLink db = new DatabaseLink();
        Connection con = db.connect();
        try {
            String query = "INSERT INTO terms (learner_id, term_label, academic_year) VALUES (?, ?, ?)";
            PreparedStatement ps = con.prepareStatement(query);
            ps.setInt(1, learnerId);
            ps.setString(2, termLabel);
            ps.setInt(3, year);
            ps.executeUpdate();
            System.out.println("Term inserted successfully.");
        } catch (Exception e) {
            System.out.println("Error inserting term: " + e.getMessage());
        }
    }

    public void insertAssessment(int termId, int moduleId, String assessmentType, double marks) {
        DatabaseLink db = new DatabaseLink();
        Connection con = db.connect();
        try {
            String query = "INSERT INTO assessments (term_id, module_id, assessment_type, marks_obtained) VALUES (?, ?, ?, ?)";
            PreparedStatement ps = con.prepareStatement(query);
            ps.setInt(1, termId);
            ps.setInt(2, moduleId);
            ps.setString(3, assessmentType);
            ps.setDouble(4, marks);
            ps.executeUpdate();
            System.out.println("Assessment inserted successfully.");
        } catch (Exception e) {
            System.out.println("Error inserting assessment: " + e.getMessage());
        }
    }

    public void getAssessmentsByLearner(int learnerId) {
        DatabaseLink db = new DatabaseLink();
        Connection con = db.connect();
        try {
            String query = "SELECT a.assessment_id, m.module_title, a.assessment_type, a.marks_obtained " +
                           "FROM assessments a " +
                           "JOIN modules m ON a.module_id = m.module_id " +
                           "JOIN terms t ON a.term_id = t.term_id " +
                           "WHERE t.learner_id = ?";
            PreparedStatement ps = con.prepareStatement(query);
            ps.setInt(1, learnerId);
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                System.out.println("Assessment ID: " + rs.getInt("assessment_id"));
                System.out.println("Module: " + rs.getString("module_title"));
                System.out.println("Type: " + rs.getString("assessment_type"));
                System.out.println("Marks: " + rs.getDouble("marks_obtained"));
                System.out.println("-------------------------");
            }
        } catch (Exception e) {
            System.out.println("Error fetching assessments: " + e.getMessage());
        }
    }
}
