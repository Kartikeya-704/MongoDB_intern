
db.sales.insertMany([
	{ "_id" : 1, "item" : "Americanos", "price" : 5, "size": "Short", "quantity" : 22, "date" : ISODate("2022-01-15T08:00:00Z") },
	{ "_id" : 2, "item" : "Cappuccino", "price" : 6, "size": "Short","quantity" : 12, "date" : ISODate("2022-01-16T09:00:00Z") },
	{ "_id" : 3, "item" : "Lattes", "price" : 15, "size": "Grande","quantity" : 25, "date" : ISODate("2022-01-16T09:05:00Z") },
	{ "_id" : 4, "item" : "Mochas", "price" : 25,"size": "Tall", "quantity" : 11, "date" : ISODate("2022-02-17T08:00:00Z") },
	{ "_id" : 5, "item" : "Americanos", "price" : 10, "size": "Grande","quantity" : 12, "date" : ISODate("2022-02-18T21:06:00Z") },
	{ "_id" : 6, "item" : "Cappuccino", "price" : 7, "size": "Tall","quantity" : 20, "date" : ISODate("2022-02-20T10:07:00Z") },
	{ "_id" : 7, "item" : "Lattes", "price" : 25,"size": "Tall", "quantity" : 30, "date" : ISODate("2022-02-21T10:08:00Z") },
	{ "_id" : 8, "item" : "Americanos", "price" : 10, "size": "Grande","quantity" : 21, "date" : ISODate("2022-02-22T14:09:00Z") },
	{ "_id" : 9, "item" : "Cappuccino", "price" : 10, "size": "Grande","quantity" : 17, "date" : ISODate("2022-02-23T14:09:00Z") },
	{ "_id" : 10, "item" : "Americanos", "price" : 8, "size": "Tall","quantity" : 15, "date" : ISODate("2022-02-25T14:09:00Z")}
]);
MongoBulkWriteError: E11000 duplicate key error collection: sanja.sales index: _id_ dup key: { _id: 1 }
db.sales.drop()
true
db.sales.insertMany([
	{ "_id" : 1, "item" : "Americanos", "price" : 5, "size": "Short", "quantity" : 22, "date" : ISODate("2022-01-15T08:00:00Z") },
	{ "_id" : 2, "item" : "Cappuccino", "price" : 6, "size": "Short","quantity" : 12, "date" : ISODate("2022-01-16T09:00:00Z") },
	{ "_id" : 3, "item" : "Lattes", "price" : 15, "size": "Grande","quantity" : 25, "date" : ISODate("2022-01-16T09:05:00Z") },
	{ "_id" : 4, "item" : "Mochas", "price" : 25,"size": "Tall", "quantity" : 11, "date" : ISODate("2022-02-17T08:00:00Z") },
	{ "_id" : 5, "item" : "Americanos", "price" : 10, "size": "Grande","quantity" : 12, "date" : ISODate("2022-02-18T21:06:00Z") },
	{ "_id" : 6, "item" : "Cappuccino", "price" : 7, "size": "Tall","quantity" : 20, "date" : ISODate("2022-02-20T10:07:00Z") },
	{ "_id" : 7, "item" : "Lattes", "price" : 25,"size": "Tall", "quantity" : 30, "date" : ISODate("2022-02-21T10:08:00Z") },
	{ "_id" : 8, "item" : "Americanos", "price" : 10, "size": "Grande","quantity" : 21, "date" : ISODate("2022-02-22T14:09:00Z") },
	{ "_id" : 9, "item" : "Cappuccino", "price" : 10, "size": "Grande","quantity" : 17, "date" : ISODate("2022-02-23T14:09:00Z") },
	{ "_id" : 10, "item" : "Americanos", "price" : 8, "size": "Tall","quantity" : 15, "date" : ISODate("2022-02-25T14:09:00Z")}
]);
{
  acknowledged: true,
  insertedIds: {
    '0': 1,
    '1': 2,
    '2': 3,
    '3': 4,
    '4': 5,
    '5': 6,
    '6': 7,
    '7': 8,
    '8': 9,
    '9': 10
  }
}
db.sales.aggregate([
  {
$group:{
_id:"$item",
itemCount:{$count:{}},},},])
{
  _id: 'Americanos',
  itemCount: 4
}
{
  _id: 'Mochas',
  itemCount: 1
}
{
  _id: 'Lattes',
  itemCount: 2
}
{
  _id: 'Cappuccino',
  itemCount: 3
}
db.sales.aggregate([
  {
$group:{
_id:"$item",
itemCount:{$count:{}},},},
  {
$match:{itemCount:{$gt:2}}},])
{
  _id: 'Americanos',
  itemCount: 4
}
{
  _id: 'Cappuccino',
  itemCount: 3
}
db.sales.aggregate([
  {
$group:{
_id:"$item",
itemCount:{$count:{}},},},
  {
$match:{itemCount:{$gte:2}}},])
{
  _id: 'Lattes',
  itemCount: 2
}
{
  _id: 'Americanos',
  itemCount: 4
}
{
  _id: 'Cappuccino',
  itemCount: 3
}
db.sales.aggregate([
  {
$group:{
_id:"item",
totalSum:{$sum:{"$quantity"}}}}])
SyntaxError: Unexpected token (5:27)

[0m [90m 3 |[39m $group[33m:[39m{
 [90m 4 |[39m _id[33m:[39m[32m"item"[39m[33m,[39m
[31m[1m>[22m[39m[90m 5 |[39m totalSum[33m:[39m{$sum[33m:[39m{[32m"$quantity"[39m}}}}])
 [90m   |[39m                            [31m[1m^[22m[39m[0m
db.sales.aggregate([
  {
$group:{
_id:"$item",
totalSum:{$sum:{"$quantity"}}}}])
SyntaxError: Unexpected token (5:27)

[0m [90m 3 |[39m $group[33m:[39m{
 [90m 4 |[39m _id[33m:[39m[32m"$item"[39m[33m,[39m
[31m[1m>[22m[39m[90m 5 |[39m totalSum[33m:[39m{$sum[33m:[39m{[32m"$quantity"[39m}}}}])
 [90m   |[39m                            [31m[1m^[22m[39m[0m
db.sales.aggregate([
  {
    $group: {
      _id: "$item", // âœ… add $ to refer to the field "item"
      totalSum: { $sum: "$quantity" } // âœ… sum up quantity values
    }
  }
])
{
  _id: 'Americanos',
  totalSum: 70
}
{
  _id: 'Mochas',
  totalSum: 11
}
{
  _id: 'Lattes',
  totalSum: 55
}
{
  _id: 'Cappuccino',
  totalSum: 49
}
db.sales.aggregate([
  {
$group:{
_id:"$item",
totalSum:{$sum:{"$quantity"}}}}])
SyntaxError: Unexpected token (5:27)

[0m [90m 3 |[39m $group[33m:[39m{
 [90m 4 |[39m _id[33m:[39m[32m"$item"[39m[33m,[39m
[31m[1m>[22m[39m[90m 5 |[39m totalSum[33m:[39m{$sum[33m:[39m{[32m"$quantity"[39m}}}}])
 [90m   |[39m                            [31m[1m^[22m[39m[0m
db.sales.aggregate([
  {
$group:{
_id:"$item",
totalSum:{$sum:"$quantity"}}}])
{
  _id: 'Lattes',
  totalSum: 55
}
{
  _id: 'Americanos',
  totalSum: 70
}
{
  _id: 'Mochas',
  totalSum: 11
}
{
  _id: 'Cappuccino',
  totalSum: 49
}
db.sales.aggregate([{$group:{_id:"$item",sumItems:{$sum:"$quantity"}}}])
{
  _id: 'Cappuccino',
  sumItems: 49
}
{
  _id: 'Americanos',
  sumItems: 70
}
{
  _id: 'Mochas',
  sumItems: 11
}
{
  _id: 'Lattes',
  sumItems: 55
}
db.sales.aggregate([
{
$group:{
_id:"$item",
sumItems:{$sum:"$quantity"}
}
},
  {$match:{
$sumItems:{$gt:100}}}])
MongoServerError[BadValue]: unknown top level operator: $sumItems. If you have a field name that starts with a '$' symbol, consider using $getField or $setField.
db.sales.aggregate([
{
$group:{
_id:"$item",
sumItems:{$sum:"$quantity"}
}
},
  {$match:{
sumItems:{$gt:100}}}])
db.sales.aggregate([
  {
    $group: {
      _id: "$item",
      sumItems: { $sum: "$quantity" }
    }
  },
  {
    $match: {
      sumItems: { $gte: 100 }
    }
  }
])
db.sales.aggregate([
  {
    $group: {
      _id: "$item",
      sumprice: { $sum: "$price" }
    }
  },
  {
    $match: {
      sumprice: { $gt: 100 }
    }
  },
  {
    $sort: {
      sumprice: -1
    }
  },
  {
    $limit: 2
  }
]);
db.sales.aggregate([
  {
$group: {
      _id: "$item",
      sumRevenue: { $sum: { $multiply: ["$price", "$quantity"] } }
    }
},{
sort:{sumRevenue:-1}}])
MongoServerError[Location40324]: Unrecognized pipeline stage name: 'sort'
db.sales.aggregate([
  {
$group: {
      _id: "$item",
      sumRevenue: { $sum: { $multiply: ["$price", "$quantity"] } }
    }
},{
$sort:{sumRevenue:-1}}])
{
  _id: 'Lattes',
  sumRevenue: 1125
}
{
  _id: 'Americanos',
  sumRevenue: 560
}
{
  _id: 'Cappuccino',
  sumRevenue: 382
}
{
  _id: 'Mochas',
  sumRevenue: 275
}
db.sales.aggregate([
  {
    $group: {
      _id: "$item",
      totalRevenue: { $sum: { $multiply: ["$price", "$quantity"] } }
    }
  },
  {
    $match: {
      totalRevenue: { $gt: 100 }
    }
  },
  {
    $sort: { totalRevenue: -1 }
  }
])
{
  _id: 'Lattes',
  totalRevenue: 1125
}
{
  _id: 'Americanos',
  totalRevenue: 560
}
{
  _id: 'Cappuccino',
  totalRevenue: 382
}
{
  _id: 'Mochas',
  totalRevenue: 275
}
db.sales.aggregate([
  {
    $group: {
      _id: "$item",
      totalPrice: { $sum: "$price" },
      transactionCount: { $sum: 1 } 
    }
  },
  { 
    $match: { 
      totalPrice: { $gt: 100 } 
    } 
  },
  { 
    $sort: { 
      totalPrice: 1 
    } 
  },
  { 
    $limit: 2 
  }
])
db.sales.drop()
true
db.sales.insertMany([
	{ "_id" : 1, "item" : "Americanos", "price" : 5, "size": "Short", "quantity" : 22, "date" : ISODate("2022-01-15T08:00:00Z") },
	{ "_id" : 2, "item" : "Cappuccino", "price" : 6, "size": "Short","quantity" : 12, "date" : ISODate("2022-01-16T09:00:00Z") },
	{ "_id" : 3, "item" : "Lattes", "price" : 15, "size": "Grande","quantity" : 25, "date" : ISODate("2022-01-16T09:05:00Z") },
	{ "_id" : 4, "item" : "Mochas", "price" : 25,"size": "Tall", "quantity" : 11, "date" : ISODate("2022-02-17T08:00:00Z") },
	{ "_id" : 5, "item" : "Americanos", "price" : 10, "size": "Grande","quantity" : 12, "date" : ISODate("2022-02-18T21:06:00Z") },
	{ "_id" : 6, "item" : "Cappuccino", "price" : 7, "size": "Tall","quantity" : 20, "date" : ISODate("2022-02-20T10:07:00Z") },
	{ "_id" : 7, "item" : "Lattes", "price" : 25,"size": "Tall", "quantity" : 30, "date" : ISODate("2022-02-21T10:08:00Z") },
	{ "_id" : 8, "item" : "Americanos", "price" : 10, "size": "Grande","quantity" : 21, "date" : ISODate("2022-02-22T14:09:00Z") },
	{ "_id" : 9, "item" : "Cappuccino", "price" : 10, "size": "Grande","quantity" : 17, "date" : ISODate("2022-02-23T14:09:00Z") },
	{ "_id" : 10, "item" : "Americanos", "price" : 8, "size": "Tall","quantity" : 15, "date" : ISODate("2022-02-25T14:09:00Z")}
]);
{
  acknowledged: true,
  insertedIds: {
    '0': 1,
    '1': 2,
    '2': 3,
    '3': 4,
    '4': 5,
    '5': 6,
    '6': 7,
    '7': 8,
    '8': 9,
    '9': 10
  }
}
db.sales.aggregate([
  {
$group:{
_id:null,
maxQty:{$max:"$quantity"},},},{}])
MongoServerError[Location40323]: A pipeline stage specification object must contain exactly one field.
db.sales.aggregate([
  {
$group:{
_id:null,
maxQty:{$max:"$quantity"},},},
{
$project:{
_id:0,},},])
{
  maxQty: 30
}
db.sales.aggregate([
  {
$group:{
_id:"$item",
maxQty:{$min:{$multiply:["$quantity","$price"]}}}}])
{
  _id: 'Cappuccino',
  maxQty: 72
}
{
  _id: 'Americanos',
  maxQty: 110
}
{
  _id: 'Mochas',
  maxQty: 275
}
{
  _id: 'Lattes',
  maxQty: 375
}
db.sales.aggregate([
  {
$group:{
_id:"$item",
minQty:{$min:{$multiply:["$quantity","$price"]}}}}])
